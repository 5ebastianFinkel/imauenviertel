---
interface Props {
  title: string;
  date: Date;
  description?: string;
}

const { title, date, description } = Astro.props;
---

<button
  class="inline-flex items-center px-3 py-2 text-sm font-medium text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300"
  data-title={title}
  data-date={date.toISOString()}
  data-description={description}
  id="calendar-button"
  aria-label={`Termin "${title}" zum Kalender hinzufügen`}
  role="button">
  <svg 
    class="w-4 h-4 mr-2" 
    fill="currentColor" 
    viewBox="0 0 20 20" 
    xmlns="http://www.w3.org/2000/svg"
    aria-hidden="true">
    <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"></path>
  </svg>
  <span>Zum Kalender hinzufügen</span>
</button>

<script>
  function downloadICS(title, date, description) {
    const event = [
      'BEGIN:VCALENDAR',
      'VERSION:2.0',
      'BEGIN:VEVENT',
      `DTSTART:${formatDate(date)}`,
      `DTEND:${formatDate(new Date(date.getTime() + 3600000))}`,
      `SUMMARY:${title}`,
      description ? `DESCRIPTION:${description}` : '',
      'END:VEVENT',
      'END:VCALENDAR'
    ].filter(Boolean).join('\r\n');

    const blob = new Blob([event], { type: 'text/calendar;charset=utf-8' });
    const a = document.createElement('a');
    a.href = URL.createObjectURL(blob);
    a.download = `${title.replace(/\s+/g, '_')}.ics`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
  }

  function formatDate(date) {
    return date.toISOString().replace(/[-:]/g, '').split('.')[0] + 'Z';
  }

  // Add event listener when the document is loaded
  document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('#calendar-button').forEach(button => {
      button.addEventListener('click', (e) => {
        const btn = e.currentTarget;
        const title = btn.dataset.title;
        const date = new Date(btn.dataset.date);
        const description = btn.dataset.description;

        if (title && date) {
          downloadICS(title, date, description);
        }
      });
    });
  });
</script>
